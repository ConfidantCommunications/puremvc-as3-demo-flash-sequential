/* PureMVC Demo for AS3 - Sequential Copyright(c) 2008 Duncan Hall <duncan.hall@puremvc.org> Your reuse is governed by the Creative Commons Attribution 3.0 License*/package org.puremvc.as3.demos.sequential.view{	import org.puremvc.as3.interfaces.INotification;	import org.puremvc.as3.patterns.mediator.Mediator;		import org.puremvc.as3.demos.sequential.ApplicationFacade;	import org.puremvc.as3.demos.sequential.view.components.OutputComponent;	public class OutputMediator	extends Mediator	{		public static const NAME:String	= "OutputMediator";	 		public function OutputMediator( viewComponent:OutputComponent ) 		{			super( NAME, viewComponent );		}			override public function onRegister( ):void		{			sendNotification( ApplicationFacade.BEGIN_ASYNC_COMMANDS );		}		        override public function listNotificationInterests() : Array         {            return [            		ApplicationFacade.LOG_OUTPUT,            	   ];        }		        override public function handleNotification( note:INotification ) : void         {            switch ( note.getName() )             {                case ApplicationFacade.LOG_OUTPUT:					var logMessage:String = note.getBody() as String;					output.log( logMessage );                    break;            }        }			public function get output ():OutputComponent			{ 			return viewComponent as OutputComponent; 		}		}}